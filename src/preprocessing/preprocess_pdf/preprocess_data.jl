stp_long = Set(readlines(joinpath(@__DIR__, "stopwords_long.txt")))
stp_short = Set(readlines(joinpath(@__DIR__, "stopwords_short.txt")))

contractions = Dict(
    r"ain[’']t" => "is not",
    r"aren[’']t" => "are not",
    r"can[’']t" => "cannot",
    r"could[’']ve" => "could have",
    r"couldn[’']t" => "could not",
    r"didn[’']t" => "did not",
    r"doesn[’']t" => "does not",
    r"don[’']t" => "do not",
    r"hadn[’']t" => "had not",
    r"hasn[’']t" => "has not",
    r"haven[’']t" => "have not",
    r"he[’']d" => "he would",
    r"he[’']ll" => "he will",
    r"he[’']s" => "he is",
    r"how[’']d" => "how did",
    r"how[’']ll" => "how will",
    r"how[’']s" => "how is",
    r"i[’']d" => "i would",
    r"i[’']ll" => "i will",
    r"i[’']m" => "i am",
    r"i[’']ve" => "i have",
    r"isn[’']t" => "is not",
    r"it[’']d" => "it would",
    r"it[’']ll" => "it will",
    r"it[’']s" => "it is",
    r"let[’']s" => "let us",
    r"ma[’']am" => "madam",
    r"might[’']ve" => "might have",
    r"must[’']ve" => "must have",
    r"needn[’']t" => "need not",
    r"o[’']clock" => "of the clock",
    r"shan[’']t" => "shall not",
    r"she[’']d" => "she would",
    r"she[’']ll" => "she will",
    r"she[’']s" => "she is",
    r"should[’']ve" => "should have",
    r"shouldn[’']t" => "should not",
    r"that[’']d" => "that would",
    r"that[’']ll" => "that will",
    r"that[’']s" => "that is",
    r"there[’']d" => "there would",
    r"there[’']ll" => "there will",
    r"there[’']s" => "there is",
    r"they[’']d" => "they would",
    r"they[’']ll" => "they will",
    r"they[’']re" => "they are",
    r"they[’']ve" => "they have",
    r"wasn[’']t" => "was not",
    r"we[’']d" => "we would",
    r"we[’']ll" => "we will",
    r"we[’']re" => "we are",
    r"we[’']ve" => "we have",
    r"weren[’']t" => "were not",
    r"what[’']ll" => "what will",
    r"what[’']re" => "what are",
    r"what[’']s" => "what is",
    r"when[’']s" => "when is",
    r"where[’']d" => "where did",
    r"where[’']s" => "where is",
    r"where[’']ve" => "where have",
    r"who[’']ll" => "who will",
    r"who[’']s" => "who is",
    r"who[’']ve" => "who have",
    r"why[’']s" => "why is",
    r"won[’']t" => "will not",
    r"would[’']ve" => "would have",
    r"wouldn[’']t" => "would not",
    r"y[’']all" => "you all",
    r"you[’']d" => "you would",
    r"you[’']ll" => "you will",
    r"you[’']re" => "you are",
    r"you[’']ve" => "you have"
)
